{"version":3,"sources":["img/morty.png","img/rick.png","RightBanner.js","Detail.js","LeftBanner.js","Loader/index.js","List.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","style","color","float","fontFace","fontSize","opacity","textOrientation","writingMode","name","renderEpisode","episode","key","split","length","href","alignItems","background","borderRadius","display","height","justifyContent","textDecoration","character","gender","image","origin","species","className","RightBanner","flexDirection","overflowY","alt","src","width","marginTop","marginBottom","columnGap","gridTemplateColumns","rowGap","map","rick","borderBottom","borderTop","flex","morty","Loader","props","isLoading","state","classOptions","hidden","this","fullWidth","large","classnames","Component","defaultProps","List","characters","id","status","setActive","onClick","bind","paddingRight","marginRight","borderStyle","borderWidth","toUpperCase","_renderCharacter","App","fetch","then","result","json","console","error","results","setState","active","findActiveCharacter","Detail","find","LeftBanner","_renderMain","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.94a86d47.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/morty.b2170ed5.png\";","module.exports = __webpack_public_path__ + \"static/media/rick.ce1a0d8e.png\";","import React from 'react'\n\n\nconst style =\n{\n  color: '#FFFFFF 100%',\n  float: 'right',\n  fontFace: 'Avenir-Black',\n  fontSize: 100,\n  opacity: '8%',\n  textOrientation: 'mixed',\n  writingMode: 'vertical-rl'\n}\n\n\nexport default function({name})\n{\n  return(\n    <span style={style}>{name}</span>\n  )\n}\n","import React from 'react'\n\nimport RightBanner from './RightBanner'\n\nimport './css/detail.scss'\n\n\nfunction renderEpisode(episode)\n{\n  let key = episode.split('/')\n  key = key[key.length-1]\n\n  return (\n    <a href={episode} key={key} style={{\n      alignItems: 'center',\n      background: 'rgba(255, 255, 255, 0.2)',\n      borderRadius: 8,\n      color: '#FFFFFF',\n      display: 'flex',\n      fontFace: 'Avenir-Medium',\n      fontSize: 18,\n      height: 40,\n      justifyContent: 'center',\n      textDecoration: 'none'\n    }}>\n      {key}\n    </a>\n  )\n}\n\n\nexport default function({character})\n{\n  const {episode, gender, image, name, origin, species} = character\n\n  return(\n    <div className='detail'>\n      <RightBanner name={name}/>\n      <article style={{\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        overflowY: 'auto'\n      }}>\n        <img alt={name} src={image} style={{borderRadius: 16, height: 184, width: 240}}/>\n        <section style={{marginTop: 20}}>\n          <h2 style={{color: '#FFFFFF 100%', fontFace: 'Avenir-Black', fontSize: 28, marginBottom: 4}}>{name}</h2>\n          <span style={{color: '#81D232', fontFace: 'Avenir-Medium', fontSize: 15}}>{species} {gender}, {origin.name}</span>\n        </section>\n        <section style={{height: '100%', marginTop: 32}}>\n          <h3 style={{marginBottom: 16}}>Episodes</h3>\n          <nav style={{\n            columnGap: 16,\n            display: 'grid',\n            gridTemplateColumns: 'repeat(auto-fill, 40px)',\n            justifyContent: 'space-between',\n            overflowY: 'auto',\n            rowGap: 12\n          }}>\n            {episode.map(renderEpisode)}\n          </nav>\n        </section>\n      </article>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport morty from './img/morty.png'\nimport rick from './img/rick.png'\n\n\nexport default function()\n{\n  return(\n    <header style={{alignItems: 'center', display: 'flex', flexDirection: 'column', width: 80}}>\n      <img alt=\"\" src={rick} style={{borderBottom: 20, borderTop: 20, height: 44}}/>\n      <h1 style={{flex: 1, textOrientation: 'upright', width: 14, writingMode: 'vertical-rl'}}>RICKLEAPP</h1>\n      <img alt=\"\" src={morty} style={{borderBottom: 20, borderTop: 20, height: 28}}/>\n    </header>\n  )\n}\n","import React, { Component } from 'react'\nimport classnames from 'classnames'\nimport './loader-dots.scss'\nimport PropTypes from 'prop-types'\n\nexport default class Loader extends Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        const { isLoading } = props;\n\n        this.state =\n        {\n            isLoading: isLoading\n        }\n    }\n    \n    static getDerivedStateFromProps(props, state)\n    {\n        if (props.isLoading != null && props.isLoading !== state.isLoading)\n        {\n            return { isLoading: props.isLoading }\n        }\n        \n        return null;\n    }\n\n    render()\n    {\n        const classOptions =\n        {\n            hidden: !this.state.isLoading,\n            fullWidth: this.props.fullWidth,\n            large: this.props.large\n        }\n\n        return(\n            <div className={ classnames(['spinnerloaderContainer', classOptions, this.props.className]) }>\n                <div className=\"spinnerloader\">\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                </div>\n            </div>\n        );\n    }\n}\n\nLoader.propTypes =\n{\n    isLoading: PropTypes.bool,\n    fullWidth: PropTypes.bool,\n    large: PropTypes.bool,\n    className: PropTypes.string\n}\n\nLoader.defaultProps =\n{\n    isLoading: false,\n    fullWidth: false,\n    large: false\n}\n","import React, { Component } from 'react'\n\nimport './css/list.scss'\n\n\nexport default class List extends Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    const {characters} = props\n\n    this.state = {characters}\n  }\n\n  _renderCharacter({gender, id, image, name, origin, species, status})\n  {\n    const {setActive} = this.props\n\n    return (\n      <li key={name} onClick={setActive.bind(null, id)}\n        style={{alignItems: 'center', display: 'flex', marginBottom: 10, marginTop: 10, paddingRight: 32}}>\n        <img alt={name} src={image} style={{borderRadius: 22, marginRight: 16, width: 44}}/>\n        <div style={{flex: 1}}>\n          <h3 style={{color: '#FFFFFF', fontFace: 'Avenir-Heavy', fontSize: 18}}>{name}</h3>\n          <span style={{color: '#81D232', fontFace: 'Avenir-Medium', fontSize: 13}}>{species} {gender}, {origin.name}</span>\n        </div>\n        <span style={{borderStyle: 'solid', borderWidth: 1, borderRadius: 4, color: status === 'Alive' ? '#81D232' : 'rgba(255, 255, 255, 0.4)', character: 1.8, fontFace: 'Avenir-Medium', fontSize: 10}}>{status.toUpperCase()}</span>\n      </li>\n    )\n  }\n\n  render()\n  {\n    const {characters} = this.state\n\n    return (\n      <nav className=\"list\">\n        <h2 style={{color: '#FFFFFF 100%', fontFace: 'Avenir-Black', fontSize: 28, marginBottom: 16}}>Characters</h2>\n        <ul style={{overflowY: 'auto', height: '100%'}}>\n          {characters.map(this._renderCharacter.bind(this))}\n        </ul>\n      </nav>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nimport Detail from './Detail'\nimport LeftBanner from './LeftBanner'\nimport Loader from './Loader'\nimport List from './List'\n\nimport './css/app.scss'\n\n\nexport default class App extends Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.state = {}\n\n        fetch('https://rickandmortyapi.com/api/character/')\n        .then(function(result)\n        {\n            return result.json()\n        }, console.error)\n        .then(({results: characters}) => {\n            this.setState({active: characters[0].id, characters})\n        })\n\n        this.findActiveCharacter = ({id}) => id === this.state.active\n        this.setActive = active => this.setState({active})\n    }\n\n    _renderMain()\n    {\n        const {characters} = this.state\n\n        if(!characters) return <Loader isLoading={true}/>\n\n        return (\n            <>\n                <List setActive={this.setActive} characters={characters}/>\n                <Detail character={characters.find(this.findActiveCharacter)}/>\n            </>\n        )\n}\n\n    render()\n    {\n        return (\n            <div className=\"App\" style={{display: 'flex'}}>\n                <LeftBanner/>\n                {this._renderMain()}\n            </div>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}